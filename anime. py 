import nltk
from nltk.sentiment import SentimentIntensityAnalyzer
import matplotlib.pyplot as plt

# Download the sentiment lexicon
nltk.download('vader_lexicon')

# Initialize the sentiment analyzer
sia = SentimentIntensityAnalyzer()

# 🎌 Sample anime sentences (simulated social media data)
anime_sentences = [
    "Gojo Satoru is the most badass   character ever!",
    "I hate how they ended Attack on Titan. Terrible.",
    "One Piece is a legendary anime. Oda is a genius!",
    "Naruto had a lot of filler episodes. It was boring sometimes.",
    "That fight scene in Demon Slayer gave me chills!",
    "The animation in Jujutsu Kaisen is okay, not the best though.",
    "Luffy's Gear 5 transformation was insane!",
    "The story of Boruto is so       
      disappointing.",
    "Levi Ackerman scenes are always top-tier.",
    "I cried at the end of Your Name.      
     Beautiful movie."
]

# 🔍 Sentiment classification
sentiment_counts = {"positive": 0, "neutral": 0, "negative": 0}

for sentence in anime_sentences:
    score = sia.polarity_scores(sentence)
    compound = score['compound']
    
    if compound >= 0.05:
        sentiment_counts["positive"] += 1
    elif compound <= -0.05:
        sentiment_counts["negative"] += 1
    else:
        sentiment_counts["neutral"] += 1
    
    # (Optional) Print sentence with sentiment score
    print(f"{sentence} => {score}")

# 📊 Bar Chart Visualization
labels = list(sentiment_counts.keys())
values = list(sentiment_counts.values())

plt.figure(figsize=(8, 5))
plt.bar(labels, values, color=['green', 'grey', 'red'])
plt.title("Sentiment Analysis of Anime Opinions")
plt.xlabel("Sentiment")
plt.ylabel("Number of Sentences")
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

# 🍕 (Bonus) Pie Chart Visualization
plt.figure(figsize=(6, 6))
plt